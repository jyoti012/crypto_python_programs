import hashlib
p = 112196811256080478452919270339178279003099260176471368259848644136983056772908887429612838868563981323430174535110040298970349580429725731350729628092275406081126639733285131182925215824581235969431603916431347075560869063392305552688062702279244218149524148911807667189839153141285623030373425555136452627649
q = 86858552045658318054191880742851432200786462623824745364680553386966327838516117592512286906496994558285474475287584199169016366147513650040757145811073328965134728357718489251508361937161197747481141232303646209340644533937641077912774411153325565605301411172307892748790298701699876420219097245967178536827
n = p * q  # n is the product of p and q

Sp = 44150422991196163128340634453865851639203011051648294138886672982785445579925376502717179475392526745112127337905577645161916023594396713771050445500029632874888924108238052285819237533234965909429243721351474021663485311894745228252138213128429343496084125224813581691721323325601603080550589870039417610004
Sq = 15824602831846551829165554532193131965835703913557953257344784769090960048696812627659629658092063316686672586089927774225997441903340086736357729543211865094194523158409751999752941420943156160916506629340795768587858095551542716922729356128977671115781005685768259895500356849461851989881325849431331861561

# Python's pow function can be used to calculate modular inverse
p_inv_mod_q = pow(p, -1, q)  # p inverse mod q

# Apply Garner's formula to combine Sp and Sq into S
S = (Sp + p * p_inv_mod_q * ((Sq - Sp) % n)) % n
print('Signature: ', S) # S = 4174324079066947725549227024205772309255894260320153447972417293558667930582010039384504973943809041194443740542354044958877992107820467345403107986327935133765480429657730727657360246244468557118650934551528635714728575481665054377482813161181476473581235248030913727656925992418041350596229389583778571925336529558985324823740480060201717237035394903035403469524325573144015127580513439347674865629036354445134738333398007071655424435231232897944069981520879773857821898913377318325814606132683924912944622076309692170337030333155076469363616756131357170531251228940145210844285822993883549532337411041125394245340

# Message M
M = "I Love to Sign"

# Compute the SHA3-256 hash of M
hash_object = hashlib.sha3_256(M.encode())
h_M = hash_object.hexdigest()
print('h(M)', h_M) # c2fe399b089b5f61e5847b60ef53521e85bfc2d8849c93082b846f9456660ad7

# Given public key (e, n) and signature S
# Not sure how to calculate e from ep and eq

e = 265097  # sample example
# Verify the signature
# Compute S^e mod n and check if it matches h(M)
verified = pow(S, e, n) == h_M
print('Verify signature: ', verified)